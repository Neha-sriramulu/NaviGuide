

// Special commands
#include "U8glib.h"
#define CMD_SPECIAL '<'
#define CMD_ALIVE   '['

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);
const uint8_t rook_bitmap[] PROGMEM = {
  
0x0,0x0,0x0,0x0,0x7e,0x0,0x0,0x0,0x0,0x1,0xff,0xc0,0x0,0x0,0x0,0x7,0xff,0xe0,0x0,0x0,0x0,0xf,0xff,0xf0,0x0,0x0,0x0,0x1f,0xff,0xf8,0x0,0x0,0x0,0x3f,0xc3,0xfc,0x0,0x0,0x0,0x7f,0x0,0xfe,0x0,0x0,0x0,0x7e,0x0,0x7e,
0x0,0x0,0x0,0x7c,0x0,0x3e,0x0,0x0,0x0,0xfc,0x0,0x1f,0x0,0x0,0x0,0xf8,0x0,0x1f,0x7f,0xff,0xff,0xff,0xf0,0x1f,0xff,0xff,0xff,0xff,0xf8,0x1f,0xff,0xff,0xff,0xff,0xf8,0x1f,0x7f,0xff,0xff,0xff,0xf0,0x1f,0x3f,0xff,0xff,0xff,0xe0,0x3e,
0x1f,0xff,0xff,0xff,0xc0,0x7e,0xf,0xff,0xff,0xff,0x80,0xfe,0x7,0xff,0xff,0xff,0xc3,0xfc,0x3,0xff,0xff,0xff,0xff,0xf8,0x1,0xff,0xff,0xff,0xff,0xf0,0x0,0xff,0xff,0xff,0xff,0xe0,0x0,0x7f,0xff,0xf3,0xff,0xc0,0x0,0x3f,0xff,0xe0,0x7e,0x0,
0x0,0x1f,0xff,0xc0,0x0,0x0,0x0,0xf,0xff,0x80,0x0,0x0,0x0,0x7,0xff,0x0,0x0,0x0,0x0,0x3,0xfe,0x0,0x0,0x0,0x0,0x3,0xfe,0x0,0x0,0x0,0x0,0x1,0xfc,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,0x0,0x1,0xfc,0x0,0x0,0x0,0x1,0xff,0xff,0xfc,0x0,0x0,0x3,0xff,0xff,0xfe,0x0,0x0,0x3,0xff,0xff,0xfe,0x0,0x0,0x3,0xff,0xff,0xfe,0x0,0x0,0x1,0xff,0xff,0xfc,0x0,0x0
};
void draw(void) {
  u8g.drawBitmapP( 0, 0, 1, 8, rook_bitmap);
}

/* void ace(void) {  //Accelerometer function
  // graphic commands to redraw the complete screen should be placed here  
 // u8g.setFont(u8g_font_unifont);
  u8g.setFont(u8g_font_osb21); // 
  u8g.drawStr( 0, 22, "x:"); //X: Print
   u8g.setPrintPos(0, 44); 
   int a = analogRead(A1); // read x
   a = map(a, 0 , 1024, -100 , 100); // scaling
   u8g.setPrintPos(20, 22);  // next line
   u8g.print((int)a); // print
   
   u8g.drawStr( 0, 44, "y:"); // y: print
      u8g.setPrintPos(0, 44); // 
   
   int b = analogRead(A2); // read y
   b = map(b, 0 , 1024, -100 , 100); // scaling
    u8g.setPrintPos(20, 44);  // Next line
   u8g.print((int)b);  // print y
   digitalWrite(2, LOW);
digitalWrite(3, LOW);
 u8g.drawStr( 0, 66, "z:"); // z: print
      u8g.setPrintPos(0, 66);
   
   int c = analogRead(A3); // read z
   c = map(b, 0 , 1024, -100 , 100); /// scaling
    u8g.setPrintPos(20, 66);  // next line
   u8g.print((int)c);   // print z
   digitalWrite(2, LOW);
digitalWrite(3, LOW);
  
}*/

void message(void) { // Message function
 u8g.setFont(u8g_font_unifont);
  u8g.drawStr( 0, 55, "========"); ///ASCII Message art
  u8g.drawStr( 0, 66, "|  __  |");
  u8g.drawStr( 0, 77, "|______|");  
  digitalWrite(2, LOW);
digitalWrite(3, LOW);
 
   
}
void left(void) { // left navi function
 
 u8g.setFont(u8g_font_osb21); // ASCII left arrow
  u8g.drawStr( 0, 55, " <<<");
  u8g.drawStr( 0, 66, "<");
  u8g.drawStr( 0, 77, " <<<");  
  digitalWrite(2, LOW);
digitalWrite(3, LOW);
  
}
void right(void) {
 
 u8g.setFont(u8g_font_osb21); // ASCII right arrow
  u8g.drawStr( 0, 55, " >>>");
  u8g.drawStr( 0, 66, "      >");
  u8g.drawStr( 0, 77, " >>>");  
  digitalWrite(2, LOW);
digitalWrite(3, LOW);
}
void up(void) {
 
 u8g.setFont(u8g_font_osb21); //ASCII UP arrow
  u8g.drawStr( 0, 55, "  ^^");
  u8g.drawStr( 0, 66, " ^^^^");
  u8g.drawStr( 0, 77, " ^^^^");  
  digitalWrite(2, LOW);
digitalWrite(3, LOW);
}

void call(void) {
  
 u8g.setFont(u8g_font_unifont); //ASCII CAll 
  u8g.drawStr( 0, 55, "  ==}");
  u8g.drawStr( 0, 66, " ||");
  u8g.drawStr( 0, 77, " ||");  
  u8g.drawStr( 0, 88, "  ==}");  
  digitalWrite(2, LOW);
digitalWrite(3, LOW);
  
}

 
void setup() {  
  // initialize BT Serial port 
  Serial.begin(9600);  
  u8g.setRot90();
  if ( u8g.getMode() == U8G_MODE_R3G3B2 ) {
    u8g.setColorIndex(255);     // white
  }
  else if ( u8g.getMode() == U8G_MODE_GRAY2BIT ) {
    u8g.setColorIndex(3);         // max intensity
  }
  else if ( u8g.getMode() == U8G_MODE_BW ) {
    u8g.setColorIndex(1);         // pixel on
  }
  else if ( u8g.getMode() == U8G_MODE_HICOLOR ) {
    u8g.setHiColorByRGB(255,255,255);
  }

  // Initialize Output PORTS 
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);

  // Greet arduino total control on top of the app 
  Serial.println("Thanks for your support!"); 
} 

void loop() { 
  int appData; 

  // =========================================================== 
  // This is the point were you get data from the App
  appData = Serial.read();   // Get a byte from app, if available 
  switch(appData){ 
  case 'A': u8g.firstPage();  
  do {
    draw();
  u8g.setColorIndex(1);
  } while( u8g.nextPage() );
  
  // rebuild the picture after some delay
  delay(200);
  break;
  

  
  case 'B': 
    u8g.firstPage();  
           do {
                 message(); 
                 } while( u8g.nextPage() );
  
            delay(50);
            break;
  
 
  
  case 'C': 
    u8g.firstPage();  
           do {
                 left(); 
                 } while( u8g.nextPage() );
  
            delay(50);
    break; 
   
  
  case 'D': 
    u8g.firstPage();  
           do {
                 right(); 
                 } while( u8g.nextPage() );
  
            delay(50);
    break; 
  
   
  case 'E': 
    u8g.firstPage();  
           do {
//                 ace(); 
                 } while( u8g.nextPage() );
  
            delay(50);
    break;  
  case CMD_SPECIAL: 
    

  case CMD_ALIVE: 
    
    Serial.println("Hello ATC!"); 
    break; 
  } 
  // ========================================================== 
} 
